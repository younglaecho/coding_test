test_case = int(input())

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

def show(mat):
    for arr in mat:
        print(arr)


for _ in range(test_case):
    m, n, k = map(int, input().split())
    matrix = [[0 for _ in range(n)] for _ in range(m)]
    visited = [[0 for _ in range(n)] for _ in range(m)]

    for _ in range(k):
        a, b = map(int, input().split())
        matrix[a][b] = 1

    def DFS(i, j):
        queue = [(i, j)]
        while queue:
            x, y = queue.pop()
            for k in range(4):
                nx = x + dx[k]
                ny = y + dy[k]
                if 0 <= nx < m and 0 <= ny < n:
                    if visited[nx][ny] == 0 and matrix[nx][ny] == 1:
                        visited[nx][ny] = 1
                        visited[x][y] = 1
                        queue.append((nx, ny))

    count = 0
    for i in range(m):
        for j in range(n):
            if matrix[i][j]== 1 and visited[i][j]==0:
                DFS(i, j)
                count += 1
                
    print(count)